[{"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/App.js":"1","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/home.js":"2","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/reportWebVitals.js":"3","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/movieListings.js":"4","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/404.js":"5","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/nav.js":"6","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/styles.js":"7"},{"size":710,"mtime":1611814663719,"results":"8","hashOfConfig":"9"},{"size":202,"mtime":1611816563608,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611805382386,"results":"11","hashOfConfig":"9"},{"size":145,"mtime":1611812493231,"results":"12","hashOfConfig":"9"},{"size":125,"mtime":1611812600701,"results":"13","hashOfConfig":"9"},{"size":4204,"mtime":1611815454622,"results":"14","hashOfConfig":"9"},{"size":797,"mtime":1611817716820,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"s3hd1s",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/App.js",["31"],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/home.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/reportWebVitals.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/movieListings.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/404.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/nav.js",["32"],"import {Logo} from './styles.js';\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton,\n  Drawer,\n  Link,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst headersData = [\n  {\n    label: \"Home\",\n    href: \"/\",\n  },\n  {\n    label: \"Movies\",\n    href: \"/#\",\n  },\n  {\n    label: \"Blog\",\n    href: \"/#\",\n  },\n  {\n    label: \"Contact Us\",\n    href: \"/#\",\n  },\n];\n\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    fontFamily: \"Quicksand, sans-serif\",\n    backgroundColor: \"#fcfcfc\",\n    color: \"#000000\",\n    boxShadow: \"none\",\n    paddingRight: \"79px\",\n    paddingLeft: \"118px\",\n    \"@media (max-width: 900px)\": {\n      paddingLeft: 0,\n    },\n  },\n  menuButton: {\n    fontFamily: \"Quicksand, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"38px\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  fontFamily: \"Quicksand, sans-serif\",\n  },\n  drawerContainer: {\n    fontFamily: \"Quicksand, sans-serif\",\n    padding: \"20px 30px\",\n  },\n}));\n\nfunction Nav() {\n    const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\n\n    const [state, setState] = useState({\n      mobileView: false,\n      drawerOpen: false,\n    });\n\n    const { mobileView, drawerOpen } = state;\n\n      useEffect(() => {\n        const setResponsiveness = () => {\n          return window.innerWidth < 900\n            ? setState((prevState) => ({ ...prevState, mobileView: true }))\n            : setState((prevState) => ({ ...prevState, mobileView: false }));\n        };\n\n        setResponsiveness();\n\n        window.addEventListener(\"resize\", () => setResponsiveness());\n      }, []);\n\n      const displayDesktop = () => {\n        return (\n          <Toolbar className={toolbar}>\n            {mmLogo}\n            <div>{getMenuButtons()}</div>\n          </Toolbar>\n        );\n      };\n\n\n\n      const displayMobile = () => {\n        const handleDrawerOpen = () =>\n          setState((prevState) => ({ ...prevState, drawerOpen: true }));\n        const handleDrawerClose = () =>\n          setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n        return (\n          <Toolbar>\n            <IconButton\n              {...{\n                edge: \"start\",\n                color: \"inherit\",\n                \"aria-label\": \"menu\",\n                \"aria-haspopup\": \"true\",\n                onClick: handleDrawerOpen,\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <Drawer\n              {...{\n                anchor: \"left\",\n                open: drawerOpen,\n                onClose: handleDrawerClose,\n              }}\n            >\n              <div className={drawerContainer}>{getDrawerChoices()}</div>\n            </Drawer>\n\n            <div>{mmLogo}</div>\n          </Toolbar>\n        );\n      };\n\n\n      const getDrawerChoices = () => {\n        return headersData.map(({ label, href }) => {\n          return (\n            <Link\n              {...{\n                component: RouterLink,\n                to: href,\n                color: \"inherit\",\n                style: { textDecoration: \"none\" },\n                key: label,\n              }}\n            >\n              <MenuItem>{label}</MenuItem>\n            </Link>\n          );\n        });\n      };\n\n      const mmLogo = (\n        <Typography variant=\"h6\" component=\"h1\" >\n          <Logo>\n              Martin's Movies\n          </Logo>\n        </Typography>\n      );\n\n    const getMenuButtons = () => {\n      return headersData.map(({ label, href }) => {\n        return (\n          <Button\n            {...{\n              key: label,\n              color: \"inherit\",\n              to: href,\n              component: RouterLink,\n              className: menuButton,\n            }}\n          >\n            {label}\n          </Button>\n        );\n      });\n    };\n\n  return (\n    <header>\n      <AppBar className={header}>\n        {mobileView ? displayMobile() : displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n\n\n\nexport default Nav;\n","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/styles.js",[],{"ruleId":"33","severity":1,"message":"34","line":3,"column":40,"nodeType":"35","messageId":"36","endLine":3,"endColumn":48},{"ruleId":"33","severity":1,"message":"37","line":68,"column":21,"nodeType":"35","messageId":"36","endLine":68,"endColumn":25},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'logo' is assigned a value but never used."]