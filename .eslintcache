[{"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/reducers/movies.js":"1","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/home.js":"2","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/services/movieServices.js":"3","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/searchBar.js":"4","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/styles.js":"5","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/nav.js":"6","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/autocompleteLang.js":"7","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/config/store.js":"8","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/movieCard.js":"9","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/App.js":"10","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/404.js":"11","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/allMovies.js":"12","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/loading.js":"13","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/underNavheader.js":"14","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/searchedMovies.js":"15","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/footer.js":"16"},{"size":1239,"mtime":1612152526704,"results":"17","hashOfConfig":"18"},{"size":2434,"mtime":1612176852854,"results":"19","hashOfConfig":"18"},{"size":1321,"mtime":1612177183471,"results":"20","hashOfConfig":"18"},{"size":694,"mtime":1612163922434,"results":"21","hashOfConfig":"18"},{"size":5379,"mtime":1612163934396,"results":"22","hashOfConfig":"18"},{"size":5138,"mtime":1612141983723,"results":"23","hashOfConfig":"18"},{"size":16012,"mtime":1612163859634,"results":"24","hashOfConfig":"18"},{"size":1331,"mtime":1612077356316,"results":"25","hashOfConfig":"18"},{"size":5034,"mtime":1612177864361,"results":"26","hashOfConfig":"18"},{"size":953,"mtime":1612159035335,"results":"27","hashOfConfig":"18"},{"size":607,"mtime":1612159257805,"results":"28","hashOfConfig":"18"},{"size":3459,"mtime":1612177693104,"results":"29","hashOfConfig":"18"},{"size":211,"mtime":1612072616519,"results":"30","hashOfConfig":"18"},{"size":1096,"mtime":1612159138913,"results":"31","hashOfConfig":"18"},{"size":4559,"mtime":1612177431201,"results":"32","hashOfConfig":"18"},{"size":227,"mtime":1612159206394,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s3hd1s",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/reducers/movies.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/home.js",["68"],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/services/movieServices.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/searchBar.js",["69","70"],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/styles.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/nav.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/autocompleteLang.js",["71"],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/config/store.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/movieCard.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/App.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/404.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/allMovies.js",["72","73"],"import React,{useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {MovieContainer, BaseContainer} from '../components/styles.js';\nimport MovieCard  from '../components/movieCard.js';\nimport UnderNavHeader  from '../components/underNavheader.js';\n\n\n//Material UI\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Pagination } from '@material-ui/lab';\n\n\n\n//Axios Services\nimport {getAllMovieData} from '../services/movieServices.js';\n\n  const useStyles = makeStyles((theme) => ({\n    pagination: {\n        paddingTop: \"25px\",\n        alignSelf: \"center\",\n        \"@media (max-width: 330px)\": {\n            maxWidth: \"300px\",\n         },\n    },\n    paginationItem: {\n        fontSize: \"0.2em\",\n    },\n    }));\n\nfunction AllMovieListings({listOfWatchedMovies}) {\n   const classes = useStyles();\n   //const { pagination, paginationItem} = useStyles();\n   const [isLoaded, setisLoaded] = useState(false)\n   const [pageCount, setPageCount] = useState(500)\n   const [currentPage, setCurrentPage] = useState(1);\n   const [movieData, setMovieData] = useState([]);\n\n   //function here that checks Redux for watched movies\n\n\n   //Function which calls the Movie API returning all Movies, and paginating the data.\n   const handleAxiosData = async () => {\n    setisLoaded(false)\n    await getAllMovieData(currentPage)\n       .then(async(res) => {\n            setPageCount(res.total_pages)\n                      if (listOfWatchedMovies.length === 0 || listOfWatchedMovies === undefined){\n                          console.log(\"hit here\")\n                          //return res.results\n                      } else {\n                        const copy = res.results\n                        //console.log(\"hit copy\",copy)\n                        let resss = await  copy.map(x =>\n                          Object.assign(x, listOfWatchedMovies.find(y => y.movieId == x.id)\n                        ));\n                        console.log(\"hit resss\",resss)\n                        return resss\n                    }\n                })\n            .then((result) => {\n                  setMovieData(result);\n                  setisLoaded(true)\n          })\n          .catch((error) => {\n            console.log(\"Error\", error.response)\n          })\n\t  };\n\n\tconst handlePageChange = (event, selectedObject) => {\n        setCurrentPage(selectedObject);\n\t};\n\n   useEffect(() => {\n      handleAxiosData()\n   }, [currentPage]);\n\n  return (\n        <BaseContainer>\n           <UnderNavHeader location=\"allMovies\"/>\n            {isLoaded ? (\n               <>\n                <div className={classes.pagination}>\n                     <Pagination\n                        className={classes.paginationItem}\n                        count={pageCount}\n                        page={currentPage}\n                        onChange={handlePageChange}\n                        boundaryCount={1}\n\n                    />\n                </div>\n                <MovieContainer>\n                            {movieData.map((movie)=>\n                                <MovieCard key={movie.id} movie={movie}/>\n                            )\n                            }\n                 </MovieContainer>\n                </>\n                ) : (\n\t\t\t\t<div></div>\n\t\t\t    )}\n            </BaseContainer>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  listOfWatchedMovies: state.movies.watchedMovies,\n\n});\n\n\n\nexport default connect(mapStateToProps)(AllMovieListings);\n\n","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/loading.js",[],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/underNavheader.js",["74","75"],"/Users/shelbyd/CODING/coding-challenges/martins-movies/src/pages/searchedMovies.js",["76","77","78"],"import React, {useState, useEffect} from \"react\";\nimport { connect } from \"react-redux\";\nimport {useLocation, useHistory} from \"react-router-dom\";\n\nimport {MovieContainer, BaseContainer} from '../components/styles.js';\n\nimport MovieCard  from '../components/movieCard.js';\nimport UnderNavHeader  from '../components/underNavheader.js';\nimport Loading  from '../components/loading.js';\n\n//Material UI\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Pagination } from '@material-ui/lab';\n\n//Services\nimport {searchMoviesByKeyword} from '../services/movieServices.js';\n\n  const useStyles = makeStyles((theme) => ({\n    pagination: {\n        paddingTop: \"25px\",\n        alignSelf: \"center\",\n        \"@media (max-width: 330px)\": {\n            maxWidth: \"300px\",\n         },\n    },\n    paginationItem: {\n        fontSize: \"0.2em\",\n    },\n    }));\n\nfunction MovieListings({listOfMovies, actions, listOfWatchedMovies}) {\n    //const [movieDisplay, setMovieDisplay] = useState(listOfMovies)\n     let history = useHistory();\n     const classes = useStyles();\n     function useQuery() {\n      return new URLSearchParams(useLocation().search);\n    }\n    let query = useQuery();\n\n    const [isLoaded, setisLoaded] = useState(true)\n    const [pageCount, setPageCount] = useState(500)\n    const [currentPage, setCurrentPage] = useState(1);\n    \n\n    //Function which calls the Movie API keyword search if current page changes\n    const handleAxiosData = async () => {\n        setisLoaded(false)\n        await searchMoviesByKeyword(query.get(\"search\"), currentPage)\n              .then(async(res) => {\n                    setPageCount(res.total_pages)\n                    if (listOfWatchedMovies.length === 0 || listOfWatchedMovies === undefined){\n                    console.log(\"hit here\")\n                    //return res.results\n                    } else {\n                    const copy = res.results\n                    //console.log(\"hit copy\",copy)\n                    let resss = await  copy.map(x =>\n                    Object.assign(x, listOfWatchedMovies.find(y => y.movieId == x.id)\n                    ));\n                    console.log(\"hit resss\",resss)\n                    return resss\n                    }\n                    })\n            .then((result) => {\n                    actions.getMoviesDisplay(result)\n                    setisLoaded(true)\n                    //history.push(`/searched-movies?search=${searchInput.keyword}`);\n                    })\n                .catch((error) => {\n                    console.log(\"Error\", error.response)\n                    alert(\"oops there has been an error\")\n                })\n    };\n\n   //Handling the page change and changing state\n    const handlePageChange = (event, selectedObject) => {\n        setCurrentPage(selectedObject);\n    };\n\n    //Hook called when current page changes\n    useEffect( () => {\n        handleAxiosData()\n        //checkWatched()\n    }, [currentPage]);\n\n\n\n    return (\n            <BaseContainer>\n             <UnderNavHeader location=\"searchedMovies\"/>\n             {isLoaded ? (\n               <>\n                <div className={classes.pagination}>\n                     <Pagination\n                        className={classes.paginationItem}\n                        count={pageCount}\n                        page={currentPage}\n                        onChange={handlePageChange}\n                        boundaryCount={1}\n\n                    />\n                </div>\n                        <MovieContainer>\n                            {listOfMovies === undefined || listOfMovies.length !== 0  ? (\n                            <>\n                                {listOfMovies && listOfMovies.map((movie, index) =>\n\n                                    <MovieCard key={movie.id} movie={movie} />\n\n                                )}\n                            </>\n                            ):(\n                        <div style={{textAlign: \"center\", margin: \"100px\"}}>No Results Returned</div>\n                        )}\n                        </MovieContainer>\n                </>\n                ) : (\n\t\t\t\t<div><Loading/></div>\n\t\t\t    )}\n\n            </BaseContainer>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n  listOfMovies: state.movies.movieData,\n  listOfWatchedMovies: state.movies.watchedMovies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n   getMoviesDisplay: (movies) => {\n      dispatch({ type: \"getMovies\", payload: movies });\n    },\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieListings);\n\n","/Users/shelbyd/CODING/coding-challenges/martins-movies/src/components/footer.js",[],{"ruleId":"79","severity":1,"message":"80","line":40,"column":69,"nodeType":"81","messageId":"82","endLine":40,"endColumn":71},{"ruleId":"83","severity":1,"message":"84","line":2,"column":15,"nodeType":"85","messageId":"86","endLine":2,"endColumn":23},{"ruleId":"83","severity":1,"message":"87","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":24},{"ruleId":"83","severity":1,"message":"88","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":55,"column":84,"nodeType":"81","messageId":"82","endLine":55,"endColumn":86},{"ruleId":"89","severity":1,"message":"90","line":76,"column":7,"nodeType":"91","endLine":76,"endColumn":20,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":22,"column":13,"nodeType":"95","messageId":"96","endLine":22,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":30,"column":13,"nodeType":"95","messageId":"96","endLine":30,"endColumn":19},{"ruleId":"83","severity":1,"message":"97","line":33,"column":10,"nodeType":"85","messageId":"86","endLine":33,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":58,"column":78,"nodeType":"81","messageId":"82","endLine":58,"endColumn":80},{"ruleId":"89","severity":1,"message":"90","line":84,"column":8,"nodeType":"91","endLine":84,"endColumn":21,"suggestions":"98"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AutocompleteLang' is defined but never used.","'countryToFlag' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleAxiosData'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'history' is assigned a value but never used.",["100"],{"desc":"101","fix":"102"},{"desc":"101","fix":"103"},"Update the dependencies array to be: [currentPage, handleAxiosData]",{"range":"104","text":"105"},{"range":"106","text":"105"},[2428,2441],"[currentPage, handleAxiosData]",[2935,2948]]